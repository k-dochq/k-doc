generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider  = "postgresql"
  url       = env("DATABASE_URL")
  directUrl = env("DIRECT_URL")
  schemas   = ["public"]
}

model AdminRole {
  id          Int        @id @default(autoincrement())
  name        String     @unique
  description String?
  adminGrade  AdminGrade @default(STAFF)
  level       Int        @default(0)
  permissions Json?
  isActive    Boolean    @default(true)
  createdAt   DateTime   @default(now())
  UserRole    UserRole[]

  @@schema("public")
}

model District {
  id          String              @id @db.Uuid
  name        Json
  countryCode DistrictCountryCode
  createdAt   DateTime            @default(now())
  updatedAt   DateTime
  Hospital    Hospital[]

  @@schema("public")
}

model Doctor {
  id                     String                   @id @db.Uuid
  name                   Json
  position               Json?
  licenseNumber          String?                  @db.VarChar(50)
  licenseDate            DateTime?
  description            String?                  @db.VarChar(500)
  genderType             DoctorGenderType
  viewCount              Int                      @default(0)
  bookmarkCount          Int                      @default(0)
  order                  Int?
  stop                   Boolean                  @default(false)
  approvalStatusType     DoctorApprovalStatusType @default(APPROVED)
  rejectReason           String?
  baseId                 String?                  @db.Uuid
  hasClone               Boolean                  @default(false)
  hospitalId             String                   @db.Uuid
  createdAt              DateTime                 @default(now())
  updatedAt              DateTime
  Hospital               Hospital                 @relation(fields: [hospitalId], references: [id], onDelete: Cascade)
  DoctorMedicalSpecialty DoctorMedicalSpecialty[]

  @@index([baseId])
  @@index([hospitalId])
  @@schema("public")
}

model Hospital {
  id                       String                     @id @db.Uuid
  name                     Json
  address                  Json
  directions               Json?
  phoneNumber              String?                    @db.VarChar(20)
  description              Json?
  openingHours             Json?
  reviewCount              Int                        @default(0)
  productCount             Int                        @default(0)
  bookmarkCount            Int                        @default(0)
  viewCount                Int                        @default(0)
  rating                   Float                      @default(0)
  point                    Int                        @default(0)
  email                    String?                    @unique @db.VarChar(255)
  subPhoneNumbers          Json                       @default("[]")
  lineId                   String?                    @db.VarChar(255)
  memo                     String?
  reviewUrl                String?
  settings                 Json?
  enableJp                 Boolean                    @default(false)
  prices                   Json?
  ranking                  Int?
  discountRate             Float?
  approvalStatusType       HospitalApprovalStatusType @default(APPROVED)
  rejectReason             String?
  baseId                   String?                    @db.Uuid
  hasClone                 Boolean                    @default(false)
  districtId               String?                    @db.Uuid
  createdAt                DateTime                   @default(now())
  updatedAt                DateTime
  Doctor                   Doctor[]
  District                 District?                  @relation(fields: [districtId], references: [id], onDelete: Cascade)
  HospitalImage            HospitalImage[]
  HospitalLike             HospitalLike[]
  HospitalMedicalSpecialty HospitalMedicalSpecialty[]
  Product                  Product[]
  Review                   Review[]

  @@index([baseId])
  @@index([districtId])
  @@schema("public")
}

model HospitalProperty {
  id          String   @id @db.Uuid
  name        Json
  description Json?
  isActive    Boolean  @default(true)
  createdAt   DateTime @default(now())
  updatedAt   DateTime

  @@schema("public")
}

model InvitationCode {
  id        String             @id @db.Uuid
  code      String             @unique @db.VarChar(255)
  kind      InvitationCodeKind
  expiresAt DateTime?          @db.Timestamptz(6)
  usedAt    DateTime?          @db.Timestamptz(6)
  createdAt DateTime           @default(now())
  User      User?

  @@schema("public")
}

model Product {
  id            String   @id @db.Uuid
  name          Json
  description   Json?
  price         Int?
  discountPrice Int?
  isActive      Boolean  @default(true)
  viewCount     Int      @default(0)
  bookmarkCount Int      @default(0)
  order         Int?
  baseId        String?  @db.Uuid
  hasClone      Boolean  @default(false)
  hospitalId    String   @db.Uuid
  createdAt     DateTime @default(now())
  updatedAt     DateTime
  Hospital      Hospital @relation(fields: [hospitalId], references: [id], onDelete: Cascade)

  @@index([baseId])
  @@index([hospitalId])
  @@schema("public")
}

model Review {
  id                 String           @id @db.Uuid
  rating             Float            @default(0)
  title              Json?
  content            Json?
  isRecommended      Boolean          @default(false)
  viewCount          Int              @default(0)
  likeCount          Int              @default(0)
  userId             String           @db.Uuid
  hospitalId         String           @db.Uuid
  createdAt          DateTime         @default(now())
  updatedAt          DateTime
  concerns           String?          @db.VarChar(500)
  medicalSpecialtyId String           @db.Uuid
  Hospital           Hospital         @relation(fields: [hospitalId], references: [id], onDelete: Cascade)
  MedicalSpecialty   MedicalSpecialty @relation(fields: [medicalSpecialtyId], references: [id], onDelete: Cascade)
  User               User             @relation(fields: [userId], references: [id], onDelete: Cascade)
  ReviewImage        ReviewImage[]

  @@index([hospitalId])
  @@index([userId])
  @@index([medicalSpecialtyId])
  @@schema("public")
}

model User {
  id                          String          @id @db.Uuid
  displayName                 String?
  createdAt                   DateTime        @default(now())
  updatedAt                   DateTime
  aud                         String?         @db.VarChar(255)
  banned_until                DateTime?       @db.Timestamptz(6)
  confirmation_sent_at        DateTime?       @db.Timestamptz(6)
  confirmation_token          String?         @db.VarChar(255)
  confirmed_at                DateTime?       @db.Timestamptz(6)
  deleted_at                  DateTime?       @db.Timestamptz(6)
  email                       String?         @db.VarChar(255)
  email_change                String?         @db.VarChar(255)
  email_change_confirm_status Int?            @default(0) @db.SmallInt
  email_change_sent_at        DateTime?       @db.Timestamptz(6)
  email_change_token_current  String?         @default("") @db.VarChar(255)
  email_change_token_new      String?         @db.VarChar(255)
  email_confirmed_at          DateTime?       @db.Timestamptz(6)
  encrypted_password          String?         @db.VarChar(255)
  instance_id                 String?         @db.Uuid
  invited_at                  DateTime?       @db.Timestamptz(6)
  is_anonymous                Boolean         @default(false)
  is_sso_user                 Boolean         @default(false)
  is_super_admin              Boolean?
  last_sign_in_at             DateTime?       @db.Timestamptz(6)
  phone                       String?         @unique
  phone_change                String?         @default("")
  phone_change_sent_at        DateTime?       @db.Timestamptz(6)
  phone_change_token          String?         @default("") @db.VarChar(255)
  phone_confirmed_at          DateTime?       @db.Timestamptz(6)
  raw_app_meta_data           Json?
  raw_user_meta_data          Json?
  reauthentication_sent_at    DateTime?       @db.Timestamptz(6)
  reauthentication_token      String?         @default("") @db.VarChar(255)
  recovery_sent_at            DateTime?       @db.Timestamptz(6)
  recovery_token              String?         @db.VarChar(255)
  role                        String?         @db.VarChar(255)
  invitationCodeId            String?         @unique @db.Uuid
  advertPush                  Boolean?        @default(false)
  age                         Int?
  collectPersonalInfo         Boolean?        @default(false)
  communityAlarm              Boolean?        @default(false)
  deviceInfo                  String?         @db.VarChar(256)
  deviceToken                 String?         @db.VarChar(256)
  drRoleType                  UserRoleType?
  genderType                  UserGenderType?
  locale                      UserLocale?     @default(ko_KR)
  loggedInAt                  DateTime?
  name                        String?         @db.VarChar(100)
  nickName                    String?         @db.VarChar(100)
  phoneNumber                 String?         @db.VarChar(255)
  postAlarm                   Boolean?        @default(false)
  profileImgUrl               String?
  termsVersion                String?         @db.VarChar(20)
  userStatusType              UserStatusType? @default(ACTIVE)
  HospitalLike                HospitalLike[]
  Review                      Review[]
  InvitationCode              InvitationCode? @relation(fields: [invitationCodeId], references: [id], onDelete: Restrict)
  UserRole                    UserRole[]

  @@schema("public")
}

model UserRole {
  id        Int       @id @default(autoincrement())
  userId    String    @db.Uuid
  roleId    Int
  createdAt DateTime  @default(now())
  createdBy String?   @db.Uuid
  AdminRole AdminRole @relation(fields: [roleId], references: [id])
  User      User      @relation(fields: [userId], references: [id], onDelete: Cascade)

  @@unique([userId, roleId])
  @@index([roleId])
  @@index([userId])
  @@schema("public")
}

model HospitalImage {
  id         String            @id @db.Uuid
  hospitalId String            @db.Uuid
  imageType  HospitalImageType
  imageUrl   String            @db.VarChar(500)
  alt        String?           @db.VarChar(255)
  order      Int?
  isActive   Boolean           @default(true)
  createdAt  DateTime          @default(now())
  updatedAt  DateTime
  Hospital   Hospital          @relation(fields: [hospitalId], references: [id], onDelete: Cascade)

  @@index([hospitalId])
  @@index([imageType])
  @@schema("public")
}

model HospitalMedicalSpecialty {
  id                 String           @id @db.Uuid
  hospitalId         String           @db.Uuid
  medicalSpecialtyId String           @db.Uuid
  createdAt          DateTime         @default(now())
  Hospital           Hospital         @relation(fields: [hospitalId], references: [id], onDelete: Cascade)
  MedicalSpecialty   MedicalSpecialty @relation(fields: [medicalSpecialtyId], references: [id], onDelete: Cascade)

  @@unique([hospitalId, medicalSpecialtyId])
  @@index([hospitalId])
  @@index([medicalSpecialtyId])
  @@schema("public")
}

model MedicalSpecialty {
  id                       String                     @id @db.Uuid
  name                     Json
  specialtyType            MedicalSpecialtyType
  description              Json?
  order                    Int?
  isActive                 Boolean                    @default(true)
  createdAt                DateTime                   @default(now())
  updatedAt                DateTime
  DoctorMedicalSpecialty   DoctorMedicalSpecialty[]
  HospitalMedicalSpecialty HospitalMedicalSpecialty[]
  Review                   Review[]

  @@schema("public")
}

model DoctorMedicalSpecialty {
  id                 String           @id @db.Uuid
  doctorId           String           @db.Uuid
  medicalSpecialtyId String           @db.Uuid
  createdAt          DateTime         @default(now())
  Doctor             Doctor           @relation(fields: [doctorId], references: [id], onDelete: Cascade)
  MedicalSpecialty   MedicalSpecialty @relation(fields: [medicalSpecialtyId], references: [id], onDelete: Cascade)

  @@unique([doctorId, medicalSpecialtyId])
  @@index([doctorId])
  @@index([medicalSpecialtyId])
  @@schema("public")
}

model ReviewImage {
  id        String          @id @db.Uuid
  reviewId  String          @db.Uuid
  imageType ReviewImageType
  imageUrl  String          @db.VarChar(500)
  alt       String?         @db.VarChar(255)
  order     Int?
  isActive  Boolean         @default(true)
  createdAt DateTime        @default(now())
  updatedAt DateTime
  Review    Review          @relation(fields: [reviewId], references: [id], onDelete: Cascade)

  @@index([imageType])
  @@index([reviewId])
  @@schema("public")
}

model HospitalLike {
  id         String   @id @db.Uuid
  userId     String   @db.Uuid
  hospitalId String   @db.Uuid
  createdAt  DateTime @default(now())
  Hospital   Hospital @relation(fields: [hospitalId], references: [id], onDelete: Cascade)
  User       User     @relation(fields: [userId], references: [id], onDelete: Cascade)

  @@unique([userId, hospitalId])
  @@index([createdAt])
  @@index([hospitalId])
  @@index([userId])
  @@schema("public")
}

enum AdminGrade {
  STAFF
  SUPER_ADMIN

  @@schema("public")
}

enum DistrictCountryCode {
  KR
  TH

  @@schema("public")
}

enum DoctorApprovalStatusType {
  PENDING
  APPROVED
  REJECTED
  WAITING_APPROVAL

  @@schema("public")
}

enum DoctorGenderType {
  MALE
  FEMALE

  @@schema("public")
}

enum HospitalApprovalStatusType {
  PENDING
  APPROVED
  REJECTED

  @@schema("public")
}

enum InvitationCodeKind {
  VIP
  PAYMENT_REFERENCE

  @@schema("public")
}

enum UserGenderType {
  MALE
  FEMALE
  OTHER

  @@schema("public")
}

enum UserLocale {
  ko_KR
  en_US
  th_TH

  @@schema("public")
}

enum UserRoleType {
  PATIENT
  DOCTOR
  ADMIN
  USER

  @@schema("public")
}

enum UserStatusType {
  ACTIVE
  INACTIVE
  SUSPENDED
  DELETED

  @@schema("public")
}

enum HospitalImageType {
  MAIN
  THUMBNAIL
  PROMOTION
  DETAIL
  INTERIOR

  @@schema("public")
}

enum MedicalSpecialtyType {
  EYES
  NOSE
  FACIAL_CONTOURING
  BREAST
  STEM_CELL
  LIPOSUCTION
  LIFTING
  HAIR_TRANSPLANT

  @@schema("public")
}

enum ReviewImageType {
  BEFORE
  AFTER

  @@schema("public")
}
